@use 'sass:color';

button.three-d {
    // Transition properties
    &, &>* {
        transition-property: transform, box-shadow;
        transition-duration: 300ms;
    }

    // Base properties
    -webkit-tap-highlight-color: transparent;
    border: none;
    border-radius: 12px;
    cursor: pointer;
    outline-offset: 10px;
    padding: 0 10px;
    position: relative;
    box-shadow: 0 5px 4px color.adjust($off-white, $red: -20, $green: -20, $blue: -20);

    &.db-bs {
        box-shadow: 0 5px 4px color.adjust(nth($blue, 1), $red: -20, $green: -20, $blue: -20);
    }

    .foreground {
        // Base properties
        position: relative;
        align-items: center;
        border-radius: 12px;
        display: flex;
        height: 100%;
        justify-content: center;
        transform: translateY(-4px) translateX(-10px);
        width: 100%;
        padding: 0 10px;
    }

    // Selected state properties
    &.selected {
        box-shadow: 0 2px 4px 0 color.adjust($off-white, $red: -40, $green: -40, $blue: -40);
        .foreground {
            transform: translateY(-2px) translateX(-10px)!important;
        }
    }

    // Disabled
    &[disabled] {
        .foreground {
            filter: saturate(0%);
        }
        filter: saturate(0%);
        cursor: default;
    }

    // Pseudo-classes
    &:not([disabled]):hover {
        box-shadow: 0 5px 6px 2px color.adjust($off-white, $red: -40, $green: -40, $blue: -40);
        .foreground {
            transform: translateY(-6px) translateX(-10px);
        }
    }
    &:not([disabled]):active { // This is after otherwise it causes odd effects
        box-shadow: 0 2px 4px 0 color.adjust($off-white, $red: -40, $green: -40, $blue: -40);
        .foreground {
            transform: translateY(-2px) translateX(-10px);
        }
    }
}
